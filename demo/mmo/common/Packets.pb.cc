// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Packets.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "Packets.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace Packet {

namespace {

const ::google::protobuf::Descriptor* CS_Login_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CS_Login_reflection_ = NULL;
const ::google::protobuf::Descriptor* SC_LoginResult_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SC_LoginResult_reflection_ = NULL;
const ::google::protobuf::Descriptor* CS_Say_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CS_Say_reflection_ = NULL;
const ::google::protobuf::Descriptor* SC_SomeoneSay_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SC_SomeoneSay_reflection_ = NULL;
const ::google::protobuf::Descriptor* CS_PrivateSay_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CS_PrivateSay_reflection_ = NULL;
const ::google::protobuf::Descriptor* SC_SomeonePrivateSay_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SC_SomeonePrivateSay_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_Packets_2eproto() {
  protobuf_AddDesc_Packets_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "Packets.proto");
  GOOGLE_CHECK(file != NULL);
  CS_Login_descriptor_ = file->message_type(0);
  static const int CS_Login_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_Login, user_),
  };
  CS_Login_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CS_Login_descriptor_,
      CS_Login::default_instance_,
      CS_Login_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_Login, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_Login, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CS_Login));
  SC_LoginResult_descriptor_ = file->message_type(1);
  static const int SC_LoginResult_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_LoginResult, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_LoginResult, welcome_),
  };
  SC_LoginResult_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SC_LoginResult_descriptor_,
      SC_LoginResult::default_instance_,
      SC_LoginResult_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_LoginResult, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_LoginResult, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SC_LoginResult));
  CS_Say_descriptor_ = file->message_type(2);
  static const int CS_Say_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_Say, text_),
  };
  CS_Say_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CS_Say_descriptor_,
      CS_Say::default_instance_,
      CS_Say_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_Say, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_Say, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CS_Say));
  SC_SomeoneSay_descriptor_ = file->message_type(3);
  static const int SC_SomeoneSay_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_SomeoneSay, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_SomeoneSay, text_),
  };
  SC_SomeoneSay_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SC_SomeoneSay_descriptor_,
      SC_SomeoneSay::default_instance_,
      SC_SomeoneSay_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_SomeoneSay, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_SomeoneSay, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SC_SomeoneSay));
  CS_PrivateSay_descriptor_ = file->message_type(4);
  static const int CS_PrivateSay_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_PrivateSay, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_PrivateSay, text_),
  };
  CS_PrivateSay_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CS_PrivateSay_descriptor_,
      CS_PrivateSay::default_instance_,
      CS_PrivateSay_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_PrivateSay, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_PrivateSay, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CS_PrivateSay));
  SC_SomeonePrivateSay_descriptor_ = file->message_type(5);
  static const int SC_SomeonePrivateSay_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_SomeonePrivateSay, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_SomeonePrivateSay, text_),
  };
  SC_SomeonePrivateSay_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SC_SomeonePrivateSay_descriptor_,
      SC_SomeonePrivateSay::default_instance_,
      SC_SomeonePrivateSay_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_SomeonePrivateSay, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_SomeonePrivateSay, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SC_SomeonePrivateSay));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_Packets_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CS_Login_descriptor_, &CS_Login::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SC_LoginResult_descriptor_, &SC_LoginResult::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CS_Say_descriptor_, &CS_Say::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SC_SomeoneSay_descriptor_, &SC_SomeoneSay::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CS_PrivateSay_descriptor_, &CS_PrivateSay::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SC_SomeonePrivateSay_descriptor_, &SC_SomeonePrivateSay::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_Packets_2eproto() {
  delete CS_Login::default_instance_;
  delete CS_Login_reflection_;
  delete SC_LoginResult::default_instance_;
  delete SC_LoginResult_reflection_;
  delete CS_Say::default_instance_;
  delete CS_Say_reflection_;
  delete SC_SomeoneSay::default_instance_;
  delete SC_SomeoneSay_reflection_;
  delete CS_PrivateSay::default_instance_;
  delete CS_PrivateSay_reflection_;
  delete SC_SomeonePrivateSay::default_instance_;
  delete SC_SomeonePrivateSay_reflection_;
}

void protobuf_AddDesc_Packets_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\rPackets.proto\022\006Packet\"\030\n\010CS_Login\022\014\n\004u"
    "ser\030\001 \001(\t\"/\n\016SC_LoginResult\022\014\n\004name\030\001 \001("
    "\t\022\017\n\007welcome\030\002 \001(\t\"\026\n\006CS_Say\022\014\n\004text\030\001 \001"
    "(\t\"+\n\rSC_SomeoneSay\022\014\n\004name\030\001 \001(\t\022\014\n\004tex"
    "t\030\002 \001(\t\"+\n\rCS_PrivateSay\022\014\n\004name\030\001 \001(\t\022\014"
    "\n\004text\030\002 \001(\t\"2\n\024SC_SomeonePrivateSay\022\014\n\004"
    "name\030\001 \001(\t\022\014\n\004text\030\002 \001(\t", 264);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Packets.proto", &protobuf_RegisterTypes);
  CS_Login::default_instance_ = new CS_Login();
  SC_LoginResult::default_instance_ = new SC_LoginResult();
  CS_Say::default_instance_ = new CS_Say();
  SC_SomeoneSay::default_instance_ = new SC_SomeoneSay();
  CS_PrivateSay::default_instance_ = new CS_PrivateSay();
  SC_SomeonePrivateSay::default_instance_ = new SC_SomeonePrivateSay();
  CS_Login::default_instance_->InitAsDefaultInstance();
  SC_LoginResult::default_instance_->InitAsDefaultInstance();
  CS_Say::default_instance_->InitAsDefaultInstance();
  SC_SomeoneSay::default_instance_->InitAsDefaultInstance();
  CS_PrivateSay::default_instance_->InitAsDefaultInstance();
  SC_SomeonePrivateSay::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_Packets_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_Packets_2eproto {
  StaticDescriptorInitializer_Packets_2eproto() {
    protobuf_AddDesc_Packets_2eproto();
  }
} static_descriptor_initializer_Packets_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int CS_Login::kUserFieldNumber;
#endif  // !_MSC_VER

CS_Login::CS_Login()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Packet.CS_Login)
}

void CS_Login::InitAsDefaultInstance() {
}

CS_Login::CS_Login(const CS_Login& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Packet.CS_Login)
}

void CS_Login::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  user_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CS_Login::~CS_Login() {
  // @@protoc_insertion_point(destructor:Packet.CS_Login)
  SharedDtor();
}

void CS_Login::SharedDtor() {
  if (user_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete user_;
  }
  if (this != default_instance_) {
  }
}

void CS_Login::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CS_Login::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CS_Login_descriptor_;
}

const CS_Login& CS_Login::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Packets_2eproto();
  return *default_instance_;
}

CS_Login* CS_Login::default_instance_ = NULL;

CS_Login* CS_Login::New() const {
  return new CS_Login;
}

void CS_Login::Clear() {
  if (has_user()) {
    if (user_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      user_->clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CS_Login::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Packet.CS_Login)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string user = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->user().data(), this->user().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "user");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Packet.CS_Login)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Packet.CS_Login)
  return false;
#undef DO_
}

void CS_Login::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Packet.CS_Login)
  // optional string user = 1;
  if (has_user()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user().data(), this->user().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "user");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->user(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Packet.CS_Login)
}

::google::protobuf::uint8* CS_Login::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Packet.CS_Login)
  // optional string user = 1;
  if (has_user()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user().data(), this->user().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "user");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->user(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Packet.CS_Login)
  return target;
}

int CS_Login::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string user = 1;
    if (has_user()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->user());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CS_Login::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CS_Login* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CS_Login*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CS_Login::MergeFrom(const CS_Login& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_user()) {
      set_user(from.user());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CS_Login::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CS_Login::CopyFrom(const CS_Login& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CS_Login::IsInitialized() const {

  return true;
}

void CS_Login::Swap(CS_Login* other) {
  if (other != this) {
    std::swap(user_, other->user_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CS_Login::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CS_Login_descriptor_;
  metadata.reflection = CS_Login_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SC_LoginResult::kNameFieldNumber;
const int SC_LoginResult::kWelcomeFieldNumber;
#endif  // !_MSC_VER

SC_LoginResult::SC_LoginResult()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Packet.SC_LoginResult)
}

void SC_LoginResult::InitAsDefaultInstance() {
}

SC_LoginResult::SC_LoginResult(const SC_LoginResult& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Packet.SC_LoginResult)
}

void SC_LoginResult::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  welcome_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SC_LoginResult::~SC_LoginResult() {
  // @@protoc_insertion_point(destructor:Packet.SC_LoginResult)
  SharedDtor();
}

void SC_LoginResult::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (welcome_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete welcome_;
  }
  if (this != default_instance_) {
  }
}

void SC_LoginResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_LoginResult::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SC_LoginResult_descriptor_;
}

const SC_LoginResult& SC_LoginResult::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Packets_2eproto();
  return *default_instance_;
}

SC_LoginResult* SC_LoginResult::default_instance_ = NULL;

SC_LoginResult* SC_LoginResult::New() const {
  return new SC_LoginResult;
}

void SC_LoginResult::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
    if (has_welcome()) {
      if (welcome_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        welcome_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SC_LoginResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Packet.SC_LoginResult)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_welcome;
        break;
      }

      // optional string welcome = 2;
      case 2: {
        if (tag == 18) {
         parse_welcome:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_welcome()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->welcome().data(), this->welcome().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "welcome");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Packet.SC_LoginResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Packet.SC_LoginResult)
  return false;
#undef DO_
}

void SC_LoginResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Packet.SC_LoginResult)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional string welcome = 2;
  if (has_welcome()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->welcome().data(), this->welcome().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "welcome");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->welcome(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Packet.SC_LoginResult)
}

::google::protobuf::uint8* SC_LoginResult::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Packet.SC_LoginResult)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional string welcome = 2;
  if (has_welcome()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->welcome().data(), this->welcome().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "welcome");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->welcome(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Packet.SC_LoginResult)
  return target;
}

int SC_LoginResult::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string welcome = 2;
    if (has_welcome()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->welcome());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_LoginResult::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SC_LoginResult* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SC_LoginResult*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SC_LoginResult::MergeFrom(const SC_LoginResult& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_welcome()) {
      set_welcome(from.welcome());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SC_LoginResult::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_LoginResult::CopyFrom(const SC_LoginResult& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_LoginResult::IsInitialized() const {

  return true;
}

void SC_LoginResult::Swap(SC_LoginResult* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(welcome_, other->welcome_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SC_LoginResult::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SC_LoginResult_descriptor_;
  metadata.reflection = SC_LoginResult_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CS_Say::kTextFieldNumber;
#endif  // !_MSC_VER

CS_Say::CS_Say()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Packet.CS_Say)
}

void CS_Say::InitAsDefaultInstance() {
}

CS_Say::CS_Say(const CS_Say& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Packet.CS_Say)
}

void CS_Say::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  text_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CS_Say::~CS_Say() {
  // @@protoc_insertion_point(destructor:Packet.CS_Say)
  SharedDtor();
}

void CS_Say::SharedDtor() {
  if (text_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete text_;
  }
  if (this != default_instance_) {
  }
}

void CS_Say::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CS_Say::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CS_Say_descriptor_;
}

const CS_Say& CS_Say::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Packets_2eproto();
  return *default_instance_;
}

CS_Say* CS_Say::default_instance_ = NULL;

CS_Say* CS_Say::New() const {
  return new CS_Say;
}

void CS_Say::Clear() {
  if (has_text()) {
    if (text_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      text_->clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CS_Say::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Packet.CS_Say)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string text = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->text().data(), this->text().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "text");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Packet.CS_Say)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Packet.CS_Say)
  return false;
#undef DO_
}

void CS_Say::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Packet.CS_Say)
  // optional string text = 1;
  if (has_text()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), this->text().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->text(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Packet.CS_Say)
}

::google::protobuf::uint8* CS_Say::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Packet.CS_Say)
  // optional string text = 1;
  if (has_text()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), this->text().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->text(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Packet.CS_Say)
  return target;
}

int CS_Say::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string text = 1;
    if (has_text()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->text());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CS_Say::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CS_Say* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CS_Say*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CS_Say::MergeFrom(const CS_Say& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_text()) {
      set_text(from.text());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CS_Say::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CS_Say::CopyFrom(const CS_Say& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CS_Say::IsInitialized() const {

  return true;
}

void CS_Say::Swap(CS_Say* other) {
  if (other != this) {
    std::swap(text_, other->text_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CS_Say::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CS_Say_descriptor_;
  metadata.reflection = CS_Say_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SC_SomeoneSay::kNameFieldNumber;
const int SC_SomeoneSay::kTextFieldNumber;
#endif  // !_MSC_VER

SC_SomeoneSay::SC_SomeoneSay()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Packet.SC_SomeoneSay)
}

void SC_SomeoneSay::InitAsDefaultInstance() {
}

SC_SomeoneSay::SC_SomeoneSay(const SC_SomeoneSay& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Packet.SC_SomeoneSay)
}

void SC_SomeoneSay::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SC_SomeoneSay::~SC_SomeoneSay() {
  // @@protoc_insertion_point(destructor:Packet.SC_SomeoneSay)
  SharedDtor();
}

void SC_SomeoneSay::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (text_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete text_;
  }
  if (this != default_instance_) {
  }
}

void SC_SomeoneSay::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_SomeoneSay::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SC_SomeoneSay_descriptor_;
}

const SC_SomeoneSay& SC_SomeoneSay::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Packets_2eproto();
  return *default_instance_;
}

SC_SomeoneSay* SC_SomeoneSay::default_instance_ = NULL;

SC_SomeoneSay* SC_SomeoneSay::New() const {
  return new SC_SomeoneSay;
}

void SC_SomeoneSay::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
    if (has_text()) {
      if (text_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        text_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SC_SomeoneSay::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Packet.SC_SomeoneSay)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_text;
        break;
      }

      // optional string text = 2;
      case 2: {
        if (tag == 18) {
         parse_text:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->text().data(), this->text().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "text");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Packet.SC_SomeoneSay)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Packet.SC_SomeoneSay)
  return false;
#undef DO_
}

void SC_SomeoneSay::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Packet.SC_SomeoneSay)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional string text = 2;
  if (has_text()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), this->text().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->text(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Packet.SC_SomeoneSay)
}

::google::protobuf::uint8* SC_SomeoneSay::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Packet.SC_SomeoneSay)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional string text = 2;
  if (has_text()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), this->text().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->text(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Packet.SC_SomeoneSay)
  return target;
}

int SC_SomeoneSay::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string text = 2;
    if (has_text()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->text());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_SomeoneSay::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SC_SomeoneSay* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SC_SomeoneSay*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SC_SomeoneSay::MergeFrom(const SC_SomeoneSay& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_text()) {
      set_text(from.text());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SC_SomeoneSay::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_SomeoneSay::CopyFrom(const SC_SomeoneSay& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_SomeoneSay::IsInitialized() const {

  return true;
}

void SC_SomeoneSay::Swap(SC_SomeoneSay* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(text_, other->text_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SC_SomeoneSay::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SC_SomeoneSay_descriptor_;
  metadata.reflection = SC_SomeoneSay_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CS_PrivateSay::kNameFieldNumber;
const int CS_PrivateSay::kTextFieldNumber;
#endif  // !_MSC_VER

CS_PrivateSay::CS_PrivateSay()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Packet.CS_PrivateSay)
}

void CS_PrivateSay::InitAsDefaultInstance() {
}

CS_PrivateSay::CS_PrivateSay(const CS_PrivateSay& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Packet.CS_PrivateSay)
}

void CS_PrivateSay::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CS_PrivateSay::~CS_PrivateSay() {
  // @@protoc_insertion_point(destructor:Packet.CS_PrivateSay)
  SharedDtor();
}

void CS_PrivateSay::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (text_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete text_;
  }
  if (this != default_instance_) {
  }
}

void CS_PrivateSay::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CS_PrivateSay::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CS_PrivateSay_descriptor_;
}

const CS_PrivateSay& CS_PrivateSay::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Packets_2eproto();
  return *default_instance_;
}

CS_PrivateSay* CS_PrivateSay::default_instance_ = NULL;

CS_PrivateSay* CS_PrivateSay::New() const {
  return new CS_PrivateSay;
}

void CS_PrivateSay::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
    if (has_text()) {
      if (text_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        text_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CS_PrivateSay::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Packet.CS_PrivateSay)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_text;
        break;
      }

      // optional string text = 2;
      case 2: {
        if (tag == 18) {
         parse_text:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->text().data(), this->text().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "text");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Packet.CS_PrivateSay)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Packet.CS_PrivateSay)
  return false;
#undef DO_
}

void CS_PrivateSay::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Packet.CS_PrivateSay)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional string text = 2;
  if (has_text()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), this->text().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->text(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Packet.CS_PrivateSay)
}

::google::protobuf::uint8* CS_PrivateSay::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Packet.CS_PrivateSay)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional string text = 2;
  if (has_text()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), this->text().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->text(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Packet.CS_PrivateSay)
  return target;
}

int CS_PrivateSay::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string text = 2;
    if (has_text()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->text());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CS_PrivateSay::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CS_PrivateSay* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CS_PrivateSay*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CS_PrivateSay::MergeFrom(const CS_PrivateSay& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_text()) {
      set_text(from.text());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CS_PrivateSay::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CS_PrivateSay::CopyFrom(const CS_PrivateSay& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CS_PrivateSay::IsInitialized() const {

  return true;
}

void CS_PrivateSay::Swap(CS_PrivateSay* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(text_, other->text_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CS_PrivateSay::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CS_PrivateSay_descriptor_;
  metadata.reflection = CS_PrivateSay_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SC_SomeonePrivateSay::kNameFieldNumber;
const int SC_SomeonePrivateSay::kTextFieldNumber;
#endif  // !_MSC_VER

SC_SomeonePrivateSay::SC_SomeonePrivateSay()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Packet.SC_SomeonePrivateSay)
}

void SC_SomeonePrivateSay::InitAsDefaultInstance() {
}

SC_SomeonePrivateSay::SC_SomeonePrivateSay(const SC_SomeonePrivateSay& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Packet.SC_SomeonePrivateSay)
}

void SC_SomeonePrivateSay::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SC_SomeonePrivateSay::~SC_SomeonePrivateSay() {
  // @@protoc_insertion_point(destructor:Packet.SC_SomeonePrivateSay)
  SharedDtor();
}

void SC_SomeonePrivateSay::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (text_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete text_;
  }
  if (this != default_instance_) {
  }
}

void SC_SomeonePrivateSay::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_SomeonePrivateSay::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SC_SomeonePrivateSay_descriptor_;
}

const SC_SomeonePrivateSay& SC_SomeonePrivateSay::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Packets_2eproto();
  return *default_instance_;
}

SC_SomeonePrivateSay* SC_SomeonePrivateSay::default_instance_ = NULL;

SC_SomeonePrivateSay* SC_SomeonePrivateSay::New() const {
  return new SC_SomeonePrivateSay;
}

void SC_SomeonePrivateSay::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
    if (has_text()) {
      if (text_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        text_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SC_SomeonePrivateSay::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Packet.SC_SomeonePrivateSay)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_text;
        break;
      }

      // optional string text = 2;
      case 2: {
        if (tag == 18) {
         parse_text:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->text().data(), this->text().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "text");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Packet.SC_SomeonePrivateSay)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Packet.SC_SomeonePrivateSay)
  return false;
#undef DO_
}

void SC_SomeonePrivateSay::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Packet.SC_SomeonePrivateSay)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional string text = 2;
  if (has_text()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), this->text().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->text(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Packet.SC_SomeonePrivateSay)
}

::google::protobuf::uint8* SC_SomeonePrivateSay::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Packet.SC_SomeonePrivateSay)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional string text = 2;
  if (has_text()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), this->text().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->text(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Packet.SC_SomeonePrivateSay)
  return target;
}

int SC_SomeonePrivateSay::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string text = 2;
    if (has_text()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->text());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_SomeonePrivateSay::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SC_SomeonePrivateSay* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SC_SomeonePrivateSay*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SC_SomeonePrivateSay::MergeFrom(const SC_SomeonePrivateSay& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_text()) {
      set_text(from.text());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SC_SomeonePrivateSay::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_SomeonePrivateSay::CopyFrom(const SC_SomeonePrivateSay& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_SomeonePrivateSay::IsInitialized() const {

  return true;
}

void SC_SomeonePrivateSay::Swap(SC_SomeonePrivateSay* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(text_, other->text_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SC_SomeonePrivateSay::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SC_SomeonePrivateSay_descriptor_;
  metadata.reflection = SC_SomeonePrivateSay_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Packet

// @@protoc_insertion_point(global_scope)
